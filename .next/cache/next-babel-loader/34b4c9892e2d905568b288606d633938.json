{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/niels/dev/nielsrowinbik/brewtime/pages/recipe/[id]/timer.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useTimer } from \"../../../hooks/use-timer\";\nimport { parseMillisecondsIntoTimeStamp } from \"../../../utils/parser\";\nimport recipe from \"../../../recipies/v60.json\";\n\nvar RecipeTimer = function RecipeTimer() {\n  _s();\n\n  var timer = useTimer(recipe.steps);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: parseMillisecondsIntoTimeStamp(60000)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: parseMillisecondsIntoTimeStamp(4900)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"time\", {\n        children: parseMillisecondsIntoTimeStamp(timer.remaining)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"total left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: parseMillisecondsIntoTimeStamp(recipe.steps[timer.currentStepIndex].duration * 1000)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: recipe.steps[timer.currentStepIndex].description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: recipe.steps.map(function (step, i) {\n        var content = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"time\", {\n            children: parseMillisecondsIntoTimeStamp(step.duration * 1000)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: step.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true);\n\n        if (timer.currentStepIndex === i) return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, _this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, _this);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: content\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 28\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, _this), !timer.isRunning && timer.elapsed === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: timer.start,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, _this), timer.elapsed > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: timer.toggle,\n      children: timer.isRunning ? \"Pause\" : \"Continue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, _this), timer.elapsed > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: timer.reset,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 35\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(RecipeTimer, \"HwFlJAPsY3sp8LUdGVJr45T4B2A=\", false, function () {\n  return [useTimer];\n});\n\n_c = RecipeTimer;\nexport default RecipeTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeTimer\");","map":{"version":3,"sources":["/home/niels/dev/nielsrowinbik/brewtime/pages/recipe/[id]/timer.tsx"],"names":["useTimer","parseMillisecondsIntoTimeStamp","recipe","RecipeTimer","timer","steps","remaining","currentStepIndex","duration","description","map","step","i","content","isRunning","elapsed","start","toggle","reset"],"mappings":";;;;;;;AAAA,SAASA,QAAT,QAAyB,0BAAzB;AAEA,SAASC,8BAAT,QAA+C,uBAA/C;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AACtB,MAAMC,KAAK,GAAGJ,QAAQ,CAACE,MAAM,CAACG,KAAR,CAAtB;AAEA,sBACI;AAAA,4BACI;AAAA,gBAAKJ,8BAA8B,CAAC,KAAD;AAAnC;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAA,gBAAKA,8BAA8B,CAAC,IAAD;AAAnC;AAAA;AAAA;AAAA;AAAA,aAFJ,eAGI;AAAA,8BACI;AAAA,kBAAOA,8BAA8B,CAACG,KAAK,CAACE,SAAP;AAArC;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,eAQI;AAAA,gBACKL,8BAA8B,CAC3BC,MAAM,CAACG,KAAP,CAAaD,KAAK,CAACG,gBAAnB,EAAqCC,QAArC,GAAgD,IADrB;AADnC;AAAA;AAAA;AAAA;AAAA,aARJ,eAaI;AAAA,gBAAKN,MAAM,CAACG,KAAP,CAAaD,KAAK,CAACG,gBAAnB,EAAqCE;AAA1C;AAAA;AAAA;AAAA;AAAA,aAbJ,eAcI;AAAA,gBACKP,MAAM,CAACG,KAAP,CAAaK,GAAb,CAAiB,UAACC,IAAD,EAAOC,CAAP,EAAa;AAC3B,YAAMC,OAAO,gBACT;AAAA,kCACI;AAAA,sBACKZ,8BAA8B,CAC3BU,IAAI,CAACH,QAAL,GAAgB,IADW;AADnC;AAAA;AAAA;AAAA;AAAA,mBADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANJ,eAOI;AAAA,sBAAOG,IAAI,CAACF;AAAZ;AAAA;AAAA;AAAA;AAAA,mBAPJ;AAAA,wBADJ;;AAYA,YAAIL,KAAK,CAACG,gBAAN,KAA2BK,CAA/B,EACI,oBACI;AAAA,iCACI;AAAA,sBAASC;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ,WAASD,CAAT;AAAA;AAAA;AAAA;AAAA,iBADJ;AAMJ,4BAAO;AAAA,oBAAaC;AAAb,WAASD,CAAT;AAAA;AAAA;AAAA;AAAA,iBAAP;AACH,OArBA;AADL;AAAA;AAAA;AAAA;AAAA,aAdJ,EAsCK,CAACR,KAAK,CAACU,SAAP,IAAoBV,KAAK,CAACW,OAAN,KAAkB,CAAtC,iBACG;AAAQ,MAAA,OAAO,EAAEX,KAAK,CAACY,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAvCR,EAyCKZ,KAAK,CAACW,OAAN,GAAgB,CAAhB,iBACG;AAAQ,MAAA,OAAO,EAAEX,KAAK,CAACa,MAAvB;AAAA,gBACKb,KAAK,CAACU,SAAN,GAAkB,OAAlB,GAA4B;AADjC;AAAA;AAAA;AAAA;AAAA,aA1CR,EA8CKV,KAAK,CAACW,OAAN,GAAgB,CAAhB,iBAAqB;AAAQ,MAAA,OAAO,EAAEX,KAAK,CAACc,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA9C1B;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAkDH,CArDD;;GAAMf,W;UACYH,Q;;;KADZG,W;AAuDN,eAAeA,WAAf","sourcesContent":["import { useTimer } from \"../../../hooks/use-timer\";\n\nimport { parseMillisecondsIntoTimeStamp } from \"../../../utils/parser\";\n\nimport recipe from \"../../../recipies/v60.json\";\n\nconst RecipeTimer = () => {\n    const timer = useTimer(recipe.steps);\n\n    return (\n        <article>\n            <h1>{parseMillisecondsIntoTimeStamp(60000)}</h1>\n            <h1>{parseMillisecondsIntoTimeStamp(4900)}</h1>\n            <div>\n                <time>{parseMillisecondsIntoTimeStamp(timer.remaining)}</time>\n                <span>&nbsp;</span>\n                <span>total left</span>\n            </div>\n            <h1>\n                {parseMillisecondsIntoTimeStamp(\n                    recipe.steps[timer.currentStepIndex].duration * 1000\n                )}\n            </h1>\n            <h2>{recipe.steps[timer.currentStepIndex].description}</h2>\n            <ul>\n                {recipe.steps.map((step, i) => {\n                    const content = (\n                        <>\n                            <time>\n                                {parseMillisecondsIntoTimeStamp(\n                                    step.duration * 1000\n                                )}\n                            </time>\n                            <span>&nbsp;</span>\n                            <span>{step.description}</span>\n                        </>\n                    );\n\n                    if (timer.currentStepIndex === i)\n                        return (\n                            <li key={i}>\n                                <strong>{content}</strong>\n                            </li>\n                        );\n\n                    return <li key={i}>{content}</li>;\n                })}\n            </ul>\n            {!timer.isRunning && timer.elapsed === 0 && (\n                <button onClick={timer.start}>Start</button>\n            )}\n            {timer.elapsed > 0 && (\n                <button onClick={timer.toggle}>\n                    {timer.isRunning ? \"Pause\" : \"Continue\"}\n                </button>\n            )}\n            {timer.elapsed > 0 && <button onClick={timer.reset}>Stop</button>}\n        </article>\n    );\n};\n\nexport default RecipeTimer;\n"]},"metadata":{},"sourceType":"module"}