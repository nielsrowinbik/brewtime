{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/niels/dev/nielsrowinbik/brewtime/pages/recipe/[id]/timer.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport { useTimer } from \"../../../hooks/use-timer\";\nimport { parseMillisecondsIntoTimeStamp } from \"../../../utils/parser\";\nimport recipe from \"../../../recipies/v60.json\";\n\nvar RecipeTimer = function RecipeTimer() {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n  var timer = useTimer(recipe.steps);\n\n  var onStopClick = function onStopClick() {\n    if (confirm(\"Do you want to cancel the timer?\")) {\n      timer.stop();\n      router.push(\"/recipe/\".concat(id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"time\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"total left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: parseMillisecondsIntoTimeStamp(timer.remaining)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: recipe.steps.map(function (step, i) {\n        var content = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"time\", {\n            children: parseMillisecondsIntoTimeStamp(step.duration * 1000)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: step.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true); // if (timer.currentStepIndex === i)\n        //     return (\n        //         <li key={i}>\n        //             <strong>{content}</strong>\n        //         </li>\n        //     );\n\n\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: content\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 28\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, _this), timer.elapsed === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: timer.start,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, _this), timer.elapsed > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: timer.toggle,\n      children: timer.isRunning ? \"Pause\" : \"Continue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, _this), timer.elapsed > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onStopClick,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 35\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(RecipeTimer, \"WdT0OCkrntqY7tE3LTwMwvCZ1ow=\", false, function () {\n  return [useRouter, useTimer];\n});\n\n_c = RecipeTimer;\nexport default RecipeTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeTimer\");","map":{"version":3,"sources":["/home/niels/dev/nielsrowinbik/brewtime/pages/recipe/[id]/timer.tsx"],"names":["useRouter","useTimer","parseMillisecondsIntoTimeStamp","recipe","RecipeTimer","router","id","query","timer","steps","onStopClick","confirm","stop","push","remaining","map","step","i","content","duration","description","elapsed","start","toggle","isRunning"],"mappings":";;;;;;;AACA,SAASA,SAAT,QAA0B,aAA1B;AAEA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,8BAAT,QAA+C,uBAA/C;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AACtB,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AADsB,MAEdM,EAFc,GAEPD,MAAM,CAACE,KAFA,CAEdD,EAFc;AAItB,MAAME,KAAK,GAAGP,QAAQ,CAACE,MAAM,CAACM,KAAR,CAAtB;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,QAAIC,OAAO,CAAC,kCAAD,CAAX,EAAiD;AAC7CH,MAAAA,KAAK,CAACI,IAAN;AACAP,MAAAA,MAAM,CAACQ,IAAP,mBAAuBP,EAAvB;AACH;AACJ,GALD;;AAOA,sBACI;AAAA,4BACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAMI;AAAA,gBAAKJ,8BAA8B,CAACM,KAAK,CAACM,SAAP;AAAnC;AAAA;AAAA;AAAA;AAAA,aANJ,eAQI;AAAA,gBACKX,MAAM,CAACM,KAAP,CAAaM,GAAb,CAAiB,UAACC,IAAD,EAAOC,CAAP,EAAa;AAC3B,YAAMC,OAAO,gBACT;AAAA,kCACI;AAAA,sBACKhB,8BAA8B,CAC3Bc,IAAI,CAACG,QAAL,GAAgB,IADW;AADnC;AAAA;AAAA;AAAA;AAAA,mBADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANJ,eAOI;AAAA,sBAAOH,IAAI,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,mBAPJ;AAAA,wBADJ,CAD2B,CAa3B;AACA;AACA;AACA;AACA;AACA;;;AAEA,4BAAO;AAAA,oBAAaF;AAAb,WAASD,CAAT;AAAA;AAAA;AAAA;AAAA,iBAAP;AACH,OArBA;AADL;AAAA;AAAA;AAAA;AAAA,aARJ,EAgCKT,KAAK,CAACa,OAAN,KAAkB,CAAlB,iBACG;AAAQ,MAAA,OAAO,EAAEb,KAAK,CAACc,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAjCR,EAmCKd,KAAK,CAACa,OAAN,GAAgB,CAAhB,iBACG;AAAQ,MAAA,OAAO,EAAEb,KAAK,CAACe,MAAvB;AAAA,gBACKf,KAAK,CAACgB,SAAN,GAAkB,OAAlB,GAA4B;AADjC;AAAA;AAAA;AAAA;AAAA,aApCR,EAwCKhB,KAAK,CAACa,OAAN,GAAgB,CAAhB,iBAAqB;AAAQ,MAAA,OAAO,EAAEX,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAxC1B;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AA4CH,CAzDD;;GAAMN,W;UACaJ,S,EAGDC,Q;;;KAJZG,W;AA2DN,eAAeA,WAAf","sourcesContent":["import Link from \"next/link\";\nimport { useRouter } from \"next/router\";\n\nimport { useTimer } from \"../../../hooks/use-timer\";\nimport { parseMillisecondsIntoTimeStamp } from \"../../../utils/parser\";\n\nimport recipe from \"../../../recipies/v60.json\";\n\nconst RecipeTimer = () => {\n    const router = useRouter();\n    const { id } = router.query;\n\n    const timer = useTimer(recipe.steps);\n\n    const onStopClick = () => {\n        if (confirm(\"Do you want to cancel the timer?\")) {\n            timer.stop();\n            router.push(`/recipe/${id}`);\n        }\n    };\n\n    return (\n        <article>\n            <div>\n                <time></time>\n                <span>&nbsp;</span>\n                <span>total left</span>\n            </div>\n            <h1>{parseMillisecondsIntoTimeStamp(timer.remaining)}</h1>\n            {/* <h2></h2> */}\n            <ul>\n                {recipe.steps.map((step, i) => {\n                    const content = (\n                        <>\n                            <time>\n                                {parseMillisecondsIntoTimeStamp(\n                                    step.duration * 1000\n                                )}\n                            </time>\n                            <span>&nbsp;</span>\n                            <span>{step.description}</span>\n                        </>\n                    );\n\n                    // if (timer.currentStepIndex === i)\n                    //     return (\n                    //         <li key={i}>\n                    //             <strong>{content}</strong>\n                    //         </li>\n                    //     );\n\n                    return <li key={i}>{content}</li>;\n                })}\n            </ul>\n            {timer.elapsed === 0 && (\n                <button onClick={timer.start}>Start</button>\n            )}\n            {timer.elapsed > 0 && (\n                <button onClick={timer.toggle}>\n                    {timer.isRunning ? \"Pause\" : \"Continue\"}\n                </button>\n            )}\n            {timer.elapsed > 0 && <button onClick={onStopClick}>Stop</button>}\n        </article>\n    );\n};\n\nexport default RecipeTimer;\n"]},"metadata":{},"sourceType":"module"}