{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/niels/dev/nielsrowinbik/brewtime/pages/recipe/[id]/timer.tsx\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { useTimer } from \"../../../hooks/use-timer\";\nimport { parseMillisecondsIntoTimeStamp } from \"../../../utils/parser\";\nimport recipe from \"../../../recipies/v60.json\";\n\nconst RecipeTimer = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const timer = useTimer(recipe.steps);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"time\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"total left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: parseMillisecondsIntoTimeStamp(timer.remaining)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: recipe.steps.map((step, i) => {\n        const content = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"time\", {\n            children: parseMillisecondsIntoTimeStamp(step.duration * 1000)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: step.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true); // if (timer.currentStepIndex === i)\n        //     return (\n        //         <li key={i}>\n        //             <strong>{content}</strong>\n        //         </li>\n        //     );\n\n\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: content\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), timer.elapsed === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: timer.start,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), timer.elapsed > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: timer.toggle,\n      children: timer.isRunning ? \"Pause\" : \"Continue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: `/recipe/${id}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\nexport default RecipeTimer;","map":{"version":3,"sources":["/home/niels/dev/nielsrowinbik/brewtime/pages/recipe/[id]/timer.tsx"],"names":["Link","useRouter","useTimer","parseMillisecondsIntoTimeStamp","recipe","RecipeTimer","router","id","query","timer","steps","remaining","map","step","i","content","duration","description","elapsed","start","toggle","isRunning"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,8BAAT,QAA+C,uBAA/C;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACtB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM;AAAEM,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AAEA,QAAMC,KAAK,GAAGP,QAAQ,CAACE,MAAM,CAACM,KAAR,CAAtB;AAEA,sBACI;AAAA,4BACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAA,gBAAKP,8BAA8B,CAACM,KAAK,CAACE,SAAP;AAAnC;AAAA;AAAA;AAAA;AAAA,YANJ,eAQI;AAAA,gBACKP,MAAM,CAACM,KAAP,CAAaE,GAAb,CAAiB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC3B,cAAMC,OAAO,gBACT;AAAA,kCACI;AAAA,sBACKZ,8BAA8B,CAC3BU,IAAI,CAACG,QAAL,GAAgB,IADW;AADnC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAA,sBAAOH,IAAI,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA,wBADJ,CAD2B,CAa3B;AACA;AACA;AACA;AACA;AACA;;;AAEA,4BAAO;AAAA,oBAAaF;AAAb,WAASD,CAAT;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OArBA;AADL;AAAA;AAAA;AAAA;AAAA,YARJ,EAgCKL,KAAK,CAACS,OAAN,KAAkB,CAAlB,iBACG;AAAQ,MAAA,OAAO,EAAET,KAAK,CAACU,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjCR,EAmCKV,KAAK,CAACS,OAAN,GAAgB,CAAhB,iBACG;AAAQ,MAAA,OAAO,EAAET,KAAK,CAACW,MAAvB;AAAA,gBACKX,KAAK,CAACY,SAAN,GAAkB,OAAlB,GAA4B;AADjC;AAAA;AAAA;AAAA;AAAA,YApCR,eAwCI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAG,WAAUd,EAAG,EAA1B;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAxCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8CH,CApDD;;AAsDA,eAAeF,WAAf","sourcesContent":["import Link from \"next/link\";\nimport { useRouter } from \"next/router\";\n\nimport { useTimer } from \"../../../hooks/use-timer\";\nimport { parseMillisecondsIntoTimeStamp } from \"../../../utils/parser\";\n\nimport recipe from \"../../../recipies/v60.json\";\n\nconst RecipeTimer = () => {\n    const router = useRouter();\n    const { id } = router.query;\n\n    const timer = useTimer(recipe.steps);\n\n    return (\n        <article>\n            <div>\n                <time></time>\n                <span>&nbsp;</span>\n                <span>total left</span>\n            </div>\n            <h1>{parseMillisecondsIntoTimeStamp(timer.remaining)}</h1>\n            {/* <h2></h2> */}\n            <ul>\n                {recipe.steps.map((step, i) => {\n                    const content = (\n                        <>\n                            <time>\n                                {parseMillisecondsIntoTimeStamp(\n                                    step.duration * 1000\n                                )}\n                            </time>\n                            <span>&nbsp;</span>\n                            <span>{step.description}</span>\n                        </>\n                    );\n\n                    // if (timer.currentStepIndex === i)\n                    //     return (\n                    //         <li key={i}>\n                    //             <strong>{content}</strong>\n                    //         </li>\n                    //     );\n\n                    return <li key={i}>{content}</li>;\n                })}\n            </ul>\n            {timer.elapsed === 0 && (\n                <button onClick={timer.start}>Start</button>\n            )}\n            {timer.elapsed > 0 && (\n                <button onClick={timer.toggle}>\n                    {timer.isRunning ? \"Pause\" : \"Continue\"}\n                </button>\n            )}\n            <Link href={`/recipe/${id}`}>\n                <button>Stop</button>\n            </Link>\n        </article>\n    );\n};\n\nexport default RecipeTimer;\n"]},"metadata":{},"sourceType":"module"}