{"ast":null,"code":"export var parseMillisecondsIntoTimeStamp = function parseMillisecondsIntoTimeStamp(milliseconds) {\n  var includeHours = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  //Get hours from milliseconds\n  // const hours = milliseconds / (1000 * 60 * 60);\n  // const absoluteHours = Math.floor(hours);\n  // const hourString = absoluteHours > 9 ? absoluteHours : `0${absoluteHours}`;\n  //Get remainder from hours and convert to minutes\n  var minutes = milliseconds / (1000 * 60 * 60);\n  var absoluteMinutes = Math.floor(minutes);\n  var minuteString = absoluteMinutes > 9 ? absoluteMinutes : \"0\".concat(absoluteMinutes); //Get remainder from minutes and convert to seconds\n\n  var seconds = (minutes - absoluteMinutes) * 60;\n  var absoluteSeconds = Math.floor(seconds);\n  var secondString = absoluteSeconds > 9 ? absoluteSeconds : \"0\".concat(absoluteSeconds);\n  return [minuteString, secondString].slice(includeHours ? 0 : 1, 3).join(\":\");\n};","map":{"version":3,"sources":["/home/niels/dev/nielsrowinbik/brewtime/utils/parser.ts"],"names":["parseMillisecondsIntoTimeStamp","milliseconds","includeHours","minutes","absoluteMinutes","Math","floor","minuteString","seconds","absoluteSeconds","secondString","slice","join"],"mappings":"AAAA,OAAO,IAAMA,8BAA8B,GAAG,SAAjCA,8BAAiC,CAC1CC,YAD0C,EAGzC;AAAA,MADDC,YACC,uEADc,KACd;AACD;AACA;AACA;AACA;AAEA;AACA,MAAMC,OAAO,GAAGF,YAAY,IAAI,OAAO,EAAP,GAAY,EAAhB,CAA5B;AACA,MAAMG,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAX,CAAxB;AACA,MAAMI,YAAY,GACdH,eAAe,GAAG,CAAlB,GAAsBA,eAAtB,cAA4CA,eAA5C,CADJ,CATC,CAYD;;AACA,MAAMI,OAAO,GAAG,CAACL,OAAO,GAAGC,eAAX,IAA8B,EAA9C;AACA,MAAMK,eAAe,GAAGJ,IAAI,CAACC,KAAL,CAAWE,OAAX,CAAxB;AACA,MAAME,YAAY,GACdD,eAAe,GAAG,CAAlB,GAAsBA,eAAtB,cAA4CA,eAA5C,CADJ;AAGA,SAAO,CAACF,YAAD,EAAeG,YAAf,EACFC,KADE,CACIT,YAAY,GAAG,CAAH,GAAO,CADvB,EAC0B,CAD1B,EAEFU,IAFE,CAEG,GAFH,CAAP;AAGH,CAxBM","sourcesContent":["export const parseMillisecondsIntoTimeStamp = (\n    milliseconds: number,\n    includeHours = false\n) => {\n    //Get hours from milliseconds\n    // const hours = milliseconds / (1000 * 60 * 60);\n    // const absoluteHours = Math.floor(hours);\n    // const hourString = absoluteHours > 9 ? absoluteHours : `0${absoluteHours}`;\n\n    //Get remainder from hours and convert to minutes\n    const minutes = milliseconds / (1000 * 60 * 60);\n    const absoluteMinutes = Math.floor(minutes);\n    const minuteString =\n        absoluteMinutes > 9 ? absoluteMinutes : `0${absoluteMinutes}`;\n\n    //Get remainder from minutes and convert to seconds\n    const seconds = (minutes - absoluteMinutes) * 60;\n    const absoluteSeconds = Math.floor(seconds);\n    const secondString =\n        absoluteSeconds > 9 ? absoluteSeconds : `0${absoluteSeconds}`;\n\n    return [minuteString, secondString]\n        .slice(includeHours ? 0 : 1, 3)\n        .join(\":\");\n};\n"]},"metadata":{},"sourceType":"module"}